<body>
<p>Edition Open Access (EOA)<note>
<p>
<ptr target="http://edition-open-access.de"/>, this project is currently funded by the German <orgName>Federal Ministry of Education and Research</orgName>, grant number 16OA061.</p>
</note> is a publishing platform for scholarly monographs and edited volumes that provides authors and publishers with the means to distribute their publications in a variety of formats, e.g. online as HTML, downloadable as PDF and EPUB, or as a printed book.
      In the new version of the platform, which is currently under development, TEI-XML is used as the central file format.
      Using the ODD format we are able to specify exactly which parts of TEI-XML we want to use.
      We can then use the existing TEI infrastructure to create documentation and schemata for our customized TEI format. </p>
<p>For small simple changes creating an ODD customization is simple and feasible:
      There are some nice tutorials and introductory material and adding or removing some elements or modules is easily being done by adding a few lines into an ODD file.
      However, because of the subsequent workflow steps, the EOA publishing infrastructure expects TEI documents to have a very specific structure.
      Using ODD as a central format for describing and enforcing this structure seems to reveal certain shortcomings:</p>
<list rend="bulleted">
<item>the semantics of ODD are sometimes slightly vague and hard to figure out from the documentation (How do I know what my ODD defines?)</item>
<item>some tools in the TEI infrastructure are slightly incomplete or contain bugs</item>
<item>in ODD, exactly one <q>content model</q> for every XML element can be given. TEI provides some general purpose elements (e.g. <gi>div</gi> or <gi>p</gi>) which can appear in many different contexts.
        In many cases we want to restrict their content in different ways depending on their context, e.g. their position in the XML tree or the value of their <att>type</att> attribute (e.g. <code>div[@type = 'chapter']</code>, <code>div[@type = 'section']</code>, â€¦).
        The only way to achieve this with the current state of ODD is to add Schematron<note>
<p>
<ptr target="http://schematron.com"/>
</p>
</note> rules, which are cumbersome and repetitive to write manually.</item>
</list>
<p>In our paper, we give a roadmap of how to customize TEI with ODD considering the specifics of Edition Open Access.
      We will present a few stategies and tools that address some of the problems mentioned above, e.g. an experimental script to automatically generate an ODD including complex Schematron rules from a Relax NG schema.<note>
<p>
<ptr target="https://relaxng.org"/>
</p>
</note>
      We hope to initiate a discussion about possible improvements of the ODD format and the TEI infrastructure.</p>
<p>Our roadmap includes the following waypoints:</p>
<list rend="ordered">
<item>Creating a strict Relax NG Compact schema that covers all the textual phenomena of a scholarly publication in this domain.</item>
<item>Learning, understanding and using ODD (TEI modules, the class system, complex restrictions with Schematron).</item>
<item>Discovering the problems and limitations of ODD.</item>
<item>Finding a solution for EOA that involves the development of tools to generate an ODD file based on the manually create RNC schema in step 1.<note>
<p>Example files and scripts are available at <ptr target="https://github.molgen.mpg.de/EditionOpenAccess/eoa-publication-model"/>.</p>
</note>
</item>
<item>Discussion: Possible improvements on ODD and TEI.</item>
</list>
</body>